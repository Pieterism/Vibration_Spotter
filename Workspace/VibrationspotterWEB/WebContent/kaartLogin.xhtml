<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core">
  <h:head>
   <link rel = "stylesheet" href ="stijl/stijl.css"></link>
   <link rel = "stylesheet" href ="stijl/stijlkaart.css"></link>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <meta charset="utf-8"/>
    <title>HomePage</title>
  </h:head>
  <h:body>
  	<div class="header">
  	 	<div id="fb">
         	<a target="_blank" href="http://www.facebook.com/iiw.gent/"><img src="https://c866088.ssl.cf3.rackcdn.com/assets/facebook40x40.png"/></a>
      	</div>
      	<h1><b>Welcome to the vibrationspotter</b><img src="images/logo.png" width="50" height="50"/></h1>
    </div>
     
	<div class="background3">
    	<h:button id="tologin" image="images/loginbutton.png" outcome="login.xhtml" />
	
    	<input id="pac-input" class="controls" type="text" placeholder="Search Box"/>
    	<div id="map"></div>
    	<div id="legend"><h3>Legende</h3></div>
    	
    </div>
    
    
    <script>
	var v=0;
	var s=0;
      function initAutocomplete() {
    	  
    	  function controle(x) {
    		  var image;
    		    if(x=='Vibrationspotter'){
    		    	var image = {url: 'images/markerrood.png',scaledSize: new google.maps.Size(30, 50)};
    		    	v++;
    		    }
    		    else if(x=='STEM'){
    		    	var image = {url: 'images/markerblauw.png',scaledSize: new google.maps.Size(30, 50)};
    		    	s++;
    		    	
    		    }
    		    return image;
    		}
    	  
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 51.0624935, lng: 3.7066803000000164},
          zoom: 10,
          mapTypeId: 'roadmap',
          styles:
        	  [
        		  {
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#ebe3cd"
        		      }
        		    ]
        		  },
        		  {
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#523735"
        		      }
        		    ]
        		  },
        		  {
        		    "elementType": "labels.text.stroke",
        		    "stylers": [
        		      {
        		        "color": "#f5f1e6"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "administrative",
        		    "elementType": "geometry.stroke",
        		    "stylers": [
        		      {
        		        "color": "#c9b2a6"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "administrative.land_parcel",
        		    "elementType": "geometry.stroke",
        		    "stylers": [
        		      {
        		        "color": "#dcd2be"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "administrative.land_parcel",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#ae9e90"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "landscape.natural",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#dfd2ae"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "poi",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#dfd2ae"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "poi",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#93817c"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "poi.park",
        		    "elementType": "geometry.fill",
        		    "stylers": [
        		      {
        		        "color": "#a5b076"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "poi.park",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#447530"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#f5f1e6"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.arterial",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#fdfcf8"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.highway",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#f8c967"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.highway",
        		    "elementType": "geometry.stroke",
        		    "stylers": [
        		      {
        		        "color": "#e9bc62"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.highway.controlled_access",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#e98d58"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.highway.controlled_access",
        		    "elementType": "geometry.stroke",
        		    "stylers": [
        		      {
        		        "color": "#db8555"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "road.local",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#806b63"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "transit.line",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#dfd2ae"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "transit.line",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#8f7d77"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "transit.line",
        		    "elementType": "labels.text.stroke",
        		    "stylers": [
        		      {
        		        "color": "#ebe3cd"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "transit.station",
        		    "elementType": "geometry",
        		    "stylers": [
        		      {
        		        "color": "#dfd2ae"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "water",
        		    "elementType": "geometry.fill",
        		    "stylers": [
        		      {
        		        "color": "#b9d3c2"
        		      }
        		    ]
        		  },
        		  {
        		    "featureType": "water",
        		    "elementType": "labels.text.fill",
        		    "stylers": [
        		      {
        		        "color": "#92998d"
        		      }
        		    ]
        		  }
        		]
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
        var i=0;
        // markers toevoegen
        var infowindow = new google.maps.InfoWindow();
        <ui:repeat value="#{projectManagementEJB.findGoedgekeurdeProjecten()}" var="point">
        	var marker = new google.maps.Marker({
           		position: {lat: #{point.latitude}, lng: #{point.longtitude}},
            	map: map,
            	title: 'Titel:#{point.titel} \n Id: #{point.idProject}',
            	animation: google.maps.Animation.DROP,
            	icon: controle('#{point.type}')
          	});
        	

        	 google.maps.event.addListener(marker, 'click', (function(marker, i) {
        	        return function() {
        	            window.location.href="metingen.xhtml?id=#{point.idProject}";
        	        }
        	    })(marker, i));
        	 i++;
        
     </ui:repeat>
     
     //legende toegevoegd
     var legend = document.getElementById('legend');
     var div = document.createElement('div');
     var percentstem=parseFloat(s/(s+v)*100).toFixed(2);
     var percentvib=parseFloat(v/(s+v)*100).toFixed(2);
     div.innerHTML = "STEM            :"+ '<img src='images/markerblauw.png' style="width: 10%; height: 10%"/>'+"    aantal: "+s+"    ("+percentstem+"%)";
     legend.appendChild(div);
     var div = document.createElement('div');
     div.innerHTML = "vibrationspotter:"+ '<img src='images/markerrood.png' style="width: 10%; height: 10%"/>'+"     aantal: "+v+"    ("+percentvib+"%)";
     legend.appendChild(div);
     map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(legend);
      }

    </script>
      <script async = "async" defer = "defer"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB4iQ9wgoR3FsIhTKbM8jXAMEJ4TzQwTo0&amp;libraries=places&amp;callback=initAutocomplete"> 
      </script>
  </h:body>
</html>